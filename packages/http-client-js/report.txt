
> @typespec/http-client-js@1.0.0 test:e2e /home/joheredi/dev/typespec/packages/http-client-js
> node eng/scripts/run-e2e-tests.js


🚀 Starting mock server...
🔄 Attempt 1: Server not ready yet...
[Server] > @typespec/http-client-js@1.0.0 start:server
> npx tsp-spector server start node_modules/@typespec/http-specs/specs --coverageFile ./tsp-spector-coverage-javascript-standard.json
[Server] [32minfo[39m: Starting server in background at port 3000
🔄 Attempt 2: Server not ready yet...
[Server] [32minfo[39m: Stated server with pid: 132328

🧪 Running tests...

> vitest run test/e2e

 RUN  v3.0.5 /home/joheredi/dev/typespec/packages/http-client-js

 ❯ test/e2e/http/encode/bytes/main.test.ts (0 test)
 ❯ test/e2e/http/special-words/main.test.ts (101 tests | 68 failed) 207ms
   ✓ SpecialWords > OperationsClient > should handle operation 'and'
   ✓ SpecialWords > OperationsClient > should handle operation 'as'
   ✓ SpecialWords > OperationsClient > should handle operation 'assert'
   ✓ SpecialWords > OperationsClient > should handle operation 'async'
   ✓ SpecialWords > OperationsClient > should handle operation 'await'
   ✓ SpecialWords > OperationsClient > should handle operation 'break'
   ✓ SpecialWords > OperationsClient > should handle operation 'class'
   × SpecialWords > OperationsClient > should handle operation 'constructor' 5ms
     → Class constructor OperationsClient cannot be invoked without 'new'
   ✓ SpecialWords > OperationsClient > should handle operation 'continue'
   ✓ SpecialWords > OperationsClient > should handle operation 'def'
   ✓ SpecialWords > OperationsClient > should handle operation 'del'
   ✓ SpecialWords > OperationsClient > should handle operation 'elif'
   ✓ SpecialWords > OperationsClient > should handle operation 'else'
   ✓ SpecialWords > OperationsClient > should handle operation 'except'
   ✓ SpecialWords > OperationsClient > should handle operation 'exec'
   ✓ SpecialWords > OperationsClient > should handle operation 'finally'
   ✓ SpecialWords > OperationsClient > should handle operation 'for'
   ✓ SpecialWords > OperationsClient > should handle operation 'from'
   ✓ SpecialWords > OperationsClient > should handle operation 'global'
   ✓ SpecialWords > OperationsClient > should handle operation 'if'
   ✓ SpecialWords > OperationsClient > should handle operation 'import'
   ✓ SpecialWords > OperationsClient > should handle operation 'in'
   ✓ SpecialWords > OperationsClient > should handle operation 'is'
   ✓ SpecialWords > OperationsClient > should handle operation 'lambda'
   ✓ SpecialWords > OperationsClient > should handle operation 'not'
   ✓ SpecialWords > OperationsClient > should handle operation 'or'
   ✓ SpecialWords > OperationsClient > should handle operation 'pass'
   ✓ SpecialWords > OperationsClient > should handle operation 'raise'
   ✓ SpecialWords > OperationsClient > should handle operation 'return'
   ✓ SpecialWords > OperationsClient > should handle operation 'try'
   ✓ SpecialWords > OperationsClient > should handle operation 'while'
   ✓ SpecialWords > OperationsClient > should handle operation 'with'
   ✓ SpecialWords > OperationsClient > should handle operation 'yield'
   × SpecialWords > ParametersClient > should handle parameter 'and' 5ms
     → Unhandled response
   × SpecialWords > ParametersClient > should handle parameter 'as' 2ms
     → Unhandled response
   × SpecialWords > ParametersClient > should handle parameter 'assert' 2ms
     → Unhandled response
   × SpecialWords > ParametersClient > should handle parameter 'async' 2ms
     → Unhandled response
   × SpecialWords > ParametersClient > should handle parameter 'await' 2ms
     → Unhandled response
   × SpecialWords > ParametersClient > should handle parameter 'break' 2ms
     → Unhandled response
   × SpecialWords > ParametersClient > should handle parameter 'class' 1ms
     → Unhandled response
   × SpecialWords > ParametersClient > should handle parameter 'constructor' 2ms
     → Unhandled response
   × SpecialWords > ParametersClient > should handle parameter 'continue' 2ms
     → Unhandled response
   × SpecialWords > ParametersClient > should handle parameter 'def' 2ms
     → Unhandled response
   × SpecialWords > ParametersClient > should handle parameter 'del' 2ms
     → Unhandled response
   × SpecialWords > ParametersClient > should handle parameter 'elif' 1ms
     → Unhandled response
   × SpecialWords > ParametersClient > should handle parameter 'else' 1ms
     → Unhandled response
   × SpecialWords > ParametersClient > should handle parameter 'except' 2ms
     → Unhandled response
   × SpecialWords > ParametersClient > should handle parameter 'exec' 1ms
     → Unhandled response
   × SpecialWords > ParametersClient > should handle parameter 'finally' 1ms
     → Unhandled response
   × SpecialWords > ParametersClient > should handle parameter 'for' 2ms
     → Unhandled response
   × SpecialWords > ParametersClient > should handle parameter 'from' 2ms
     → Unhandled response
   × SpecialWords > ParametersClient > should handle parameter 'global' 1ms
     → Unhandled response
   × SpecialWords > ParametersClient > should handle parameter 'if' 2ms
     → Unhandled response
   × SpecialWords > ParametersClient > should handle parameter 'import' 1ms
     → Unhandled response
   × SpecialWords > ParametersClient > should handle parameter 'in' 2ms
     → Unhandled response
   × SpecialWords > ParametersClient > should handle parameter 'is' 2ms
     → Unhandled response
   × SpecialWords > ParametersClient > should handle parameter 'lambda' 1ms
     → Unhandled response
   × SpecialWords > ParametersClient > should handle parameter 'not' 2ms
     → Unhandled response
   × SpecialWords > ParametersClient > should handle parameter 'or' 2ms
     → Unhandled response
   × SpecialWords > ParametersClient > should handle parameter 'pass' 2ms
     → Unhandled response
   × SpecialWords > ParametersClient > should handle parameter 'raise' 1ms
     → Unhandled response
   × SpecialWords > ParametersClient > should handle parameter 'return' 1ms
     → Unhandled response
   × SpecialWords > ParametersClient > should handle parameter 'try' 1ms
     → Unhandled response
   × SpecialWords > ParametersClient > should handle parameter 'while' 2ms
     → Unhandled response
   × SpecialWords > ParametersClient > should handle parameter 'with' 1ms
     → Unhandled response
   × SpecialWords > ParametersClient > should handle parameter 'yield' 1ms
     → Unhandled response
   × SpecialWords > ParametersClient > should handle parameter 'cancellationToken' 1ms
     → Unhandled response
   × SpecialWords > ModelsClient > should handle model 'and' 3ms
     → Unhandled response
   × SpecialWords > ModelsClient > should handle model 'as' 2ms
     → Unhandled response
   × SpecialWords > ModelsClient > should handle model 'assert' 2ms
     → Unhandled response
   × SpecialWords > ModelsClient > should handle model 'async' 2ms
     → Unhandled response
   × SpecialWords > ModelsClient > should handle model 'await' 2ms
     → Unhandled response
   × SpecialWords > ModelsClient > should handle model 'break' 2ms
     → Unhandled response
   × SpecialWords > ModelsClient > should handle model 'class' 2ms
     → Unhandled response
   × SpecialWords > ModelsClient > should handle model 'constructor' 2ms
     → Unhandled response
   × SpecialWords > ModelsClient > should handle model 'continue' 2ms
     → Unhandled response
   × SpecialWords > ModelsClient > should handle model 'def' 2ms
     → Unhandled response
   × SpecialWords > ModelsClient > should handle model 'del' 2ms
     → Unhandled response
   × SpecialWords > ModelsClient > should handle model 'elif' 2ms
     → Unhandled response
   × SpecialWords > ModelsClient > should handle model 'else' 2ms
     → Unhandled response
   × SpecialWords > ModelsClient > should handle model 'except' 2ms
     → Unhandled response
   × SpecialWords > ModelsClient > should handle model 'exec' 2ms
     → Unhandled response
   × SpecialWords > ModelsClient > should handle model 'finally' 2ms
     → Unhandled response
   × SpecialWords > ModelsClient > should handle model 'for' 2ms
     → Unhandled response
   × SpecialWords > ModelsClient > should handle model 'from' 2ms
     → Unhandled response
   × SpecialWords > ModelsClient > should handle model 'global' 1ms
     → Unhandled response
   × SpecialWords > ModelsClient > should handle model 'if' 2ms
     → Unhandled response
   × SpecialWords > ModelsClient > should handle model 'import' 2ms
     → Unhandled response
   × SpecialWords > ModelsClient > should handle model 'in' 2ms
     → Unhandled response
   × SpecialWords > ModelsClient > should handle model 'is' 2ms
     → Unhandled response
   × SpecialWords > ModelsClient > should handle model 'lambda' 2ms
     → Unhandled response
   × SpecialWords > ModelsClient > should handle model 'not' 2ms
     → Unhandled response
   × SpecialWords > ModelsClient > should handle model 'or' 2ms
     → Unhandled response
   × SpecialWords > ModelsClient > should handle model 'pass' 2ms
     → Unhandled response
   × SpecialWords > ModelsClient > should handle model 'raise' 2ms
     → Unhandled response
   × SpecialWords > ModelsClient > should handle model 'return' 2ms
     → Unhandled response
   × SpecialWords > ModelsClient > should handle model 'try' 2ms
     → Unhandled response
   × SpecialWords > ModelsClient > should handle model 'while' 2ms
     → Unhandled response
   × SpecialWords > ModelsClient > should handle model 'with' 2ms
     → Unhandled response
   × SpecialWords > ModelsClient > should handle model 'yield' 2ms
     → Unhandled response
   ✓ SpecialWords > ModelPropertiesClient > should handle property same as the model name
 ❯ test/e2e/http/type/property/nullable/main.test.ts (28 tests | 2 failed) 100ms
   ✓ Type.Property.Nullable > StringClient > should get a model with all properties present (nullable string)
   ✓ Type.Property.Nullable > StringClient > should get a model with default properties (nullable string)
   ✓ Type.Property.Nullable > StringClient > should patch a model with all properties present (nullable string)
   ✓ Type.Property.Nullable > StringClient > should patch a model with default properties (nullable string)
   ✓ Type.Property.Nullable > BytesClient > should get a model with all properties present (nullable bytes)
   ✓ Type.Property.Nullable > BytesClient > should get a model with default properties (nullable bytes)
   × Type.Property.Nullable > BytesClient > should patch a model with all properties present (nullable bytes) 7ms
     → Unhandled response
   ✓ Type.Property.Nullable > BytesClient > should patch a model with default properties (nullable bytes)
   ✓ Type.Property.Nullable > DatetimeClient > should get a model with all properties present (nullable datetime)
   ✓ Type.Property.Nullable > DatetimeClient > should get a model with default properties (nullable datetime)
   ✓ Type.Property.Nullable > DatetimeClient > should patch a model with all properties present (nullable datetime)
   ✓ Type.Property.Nullable > DatetimeClient > should patch a model with default properties (nullable datetime)
   ✓ Type.Property.Nullable > DurationClient > should get a model with all properties present (nullable duration)
   ✓ Type.Property.Nullable > DurationClient > should get a model with default properties (nullable duration)
   ✓ Type.Property.Nullable > DurationClient > should patch a model with all properties present (nullable duration)
   ✓ Type.Property.Nullable > DurationClient > should patch a model with default properties (nullable duration)
   ✓ Type.Property.Nullable > CollectionsByteClient > should get a model with all properties present (nullable collection bytes)
   ✓ Type.Property.Nullable > CollectionsByteClient > should get a model with default properties (nullable collection bytes)
   × Type.Property.Nullable > CollectionsByteClient > should patch a model with all properties present (nullable collection bytes) 3ms
     → Unhandled response
   ✓ Type.Property.Nullable > CollectionsByteClient > should patch a model with default properties (nullable collection bytes)
   ✓ Type.Property.Nullable > CollectionsModelClient > should get a model with all properties present (nullable collection models)
   ✓ Type.Property.Nullable > CollectionsModelClient > should get a model with default properties (nullable collection models)
   ✓ Type.Property.Nullable > CollectionsModelClient > should patch a model with all properties present (nullable collection models)
   ✓ Type.Property.Nullable > CollectionsModelClient > should patch a model with default properties (nullable collection models)
   ✓ Type.Property.Nullable > CollectionsStringClient > should get a model with all properties present (nullable collection strings)
   ✓ Type.Property.Nullable > CollectionsStringClient > should get a model with default properties (nullable collection strings)
   ✓ Type.Property.Nullable > CollectionsStringClient > should patch a model with all properties present (nullable collection strings)
   ✓ Type.Property.Nullable > CollectionsStringClient > should patch a model with default properties (nullable collection strings)
 ❯ test/e2e/http/encode/datetime/main.test.ts (19 tests | 7 failed) 816ms
   ✓ Encode.Datetime > QueryClient > should test default encode (rfc3339) for datetime query parameter
   ✓ Encode.Datetime > QueryClient > should test rfc3339 encode for datetime query parameter
   ✓ Encode.Datetime > QueryClient > should test rfc7231 encode for datetime query parameter
   ✓ Encode.Datetime > QueryClient > should test unixTimestamp encode for datetime query parameter
   ✓ Encode.Datetime > QueryClient > should test unixTimestamp encode for datetime array query parameter
   ✓ Encode.Datetime > PropertyClient > should handle default encode (rfc3339) for datetime property
   ✓ Encode.Datetime > PropertyClient > should handle rfc3339 encode for datetime property
   ✓ Encode.Datetime > PropertyClient > should handle rfc7231 encode for datetime property
   × Encode.Datetime > PropertyClient > should handle unixTimestamp encode for datetime property 10ms
     → Unhandled response
   × Encode.Datetime > PropertyClient > should handle unixTimestamp encode for datetime array property 4ms
     → Unhandled response
   × Encode.Datetime > HeaderClient > should test default encode (rfc7231) for datetime header 732ms
     → Unhandled response
   ✓ Encode.Datetime > HeaderClient > should test rfc3339 encode for datetime header
   ✓ Encode.Datetime > HeaderClient > should test rfc7231 encode for datetime header
   × Encode.Datetime > HeaderClient > should test unixTimestamp encode for datetime header 2ms
     → Unhandled response
   × Encode.Datetime > HeaderClient > should test unixTimestamp encode for datetime array header 2ms
     → Unhandled response
   ✓ Encode.Datetime > ResponseHeaderClient > should handle default encode (rfc7231) for datetime response header
   ✓ Encode.Datetime > ResponseHeaderClient > should handle rfc3339 encode for datetime response header
   × Encode.Datetime > ResponseHeaderClient > should handle rfc7231 encode for datetime response header 4ms
     → expected 2022-08-26T18:38:00.000Z to deeply equal 2022-08-26T14:38:00.000Z
   × Encode.Datetime > ResponseHeaderClient > should handle unixTimestamp encode for datetime response header 2ms
     → expected 2022-08-26T18:38:00.000Z to deeply equal 1686566864
 ✓ test/e2e/http/type/dictionary/main.test.ts (22 tests | 1 skipped) 66ms
 ↓ test/e2e/http/payload/xml/main.test.ts (24 tests | 24 skipped)
 ✓ test/e2e/http/type/array/array.test.ts (28 tests | 1 skipped) 78ms
 ❯ test/e2e/http/type/property/optionality/main.test.ts (36 tests | 3 failed) 109ms
   ✓ Type.Property.Optional > StringClient > should get all string properties
   ✓ Type.Property.Optional > StringClient > should get default string properties
   ✓ Type.Property.Optional > StringClient > should put all string properties
   ✓ Type.Property.Optional > StringClient > should put default string properties
   ✓ Type.Property.Optional > BytesClient > should get all bytes properties
   ✓ Type.Property.Optional > BytesClient > should get default bytes properties
   × Type.Property.Optional > BytesClient > should put all bytes properties 9ms
     → Unhandled response
   ✓ Type.Property.Optional > BytesClient > should put default bytes properties
   ✓ Type.Property.Optional > DatetimeClient > should get all datetime properties
   × Type.Property.Optional > DatetimeClient > should get default datetime properties 6ms
     → expected { property: undefined } to deeply equal { property: 2022-08-26T18:38:00.000Z }
   ✓ Type.Property.Optional > DatetimeClient > should put all datetime properties
   ✓ Type.Property.Optional > DatetimeClient > should put default datetime properties
   ✓ Type.Property.Optional > DurationClient > should get all duration properties
   ✓ Type.Property.Optional > DurationClient > should get default duration properties
   ✓ Type.Property.Optional > DurationClient > should put all duration properties
   ✓ Type.Property.Optional > DurationClient > should put default duration properties
   ✓ Type.Property.Optional > PlainDateClient > should get all plain date properties
   ✓ Type.Property.Optional > PlainDateClient > should get default plain date properties
   ✓ Type.Property.Optional > PlainDateClient > should put all plain date properties
   ✓ Type.Property.Optional > PlainDateClient > should put default plain date properties
   ✓ Type.Property.Optional > PlainTimeClient > should get all plain time properties
   ✓ Type.Property.Optional > PlainTimeClient > should get default plain time properties
   ✓ Type.Property.Optional > PlainTimeClient > should put all plain time properties
   ✓ Type.Property.Optional > PlainTimeClient > should put default plain time properties
   ✓ Type.Property.Optional > CollectionsByteClient > should get all collection byte properties
   ✓ Type.Property.Optional > CollectionsByteClient > should get default collection byte properties
   × Type.Property.Optional > CollectionsByteClient > should put all collection byte properties 3ms
     → Unhandled response
   ✓ Type.Property.Optional > CollectionsByteClient > should put default collection byte properties
   ✓ Type.Property.Optional > CollectionsModelClient > should get all collection model properties
   ✓ Type.Property.Optional > CollectionsModelClient > should get default collection model properties
   ✓ Type.Property.Optional > CollectionsModelClient > should put all collection model properties
   ✓ Type.Property.Optional > CollectionsModelClient > should put default collection model properties
   ✓ Type.Property.Optional > RequiredAndOptionalClient > should get all required and optional properties
   ✓ Type.Property.Optional > RequiredAndOptionalClient > should get only required properties
   ✓ Type.Property.Optional > RequiredAndOptionalClient > should put all required and optional properties
   ✓ Type.Property.Optional > RequiredAndOptionalClient > should put only required properties
 ✓ test/e2e/http/type/model/inheritance/nested-discriminator/main.test.ts (6 tests) 45ms
 ❯ test/e2e/http/payload/json-merge-patch/main.test.ts (4 tests | 3 failed) 38ms
   ✓ Payload.JsonMergePatch > should handle createResource operation with application/merge-patch+json content type
   × Payload.JsonMergePatch > should handle updateResource operation with application/merge-patch+json content type 8ms
     → Unhandled response
   × Payload.JsonMergePatch > should handle updateOptionalResource operation with application/merge-patch+json content type and body provided 3ms
     → Unhandled response
   × Payload.JsonMergePatch > should handle updateOptionalResource operation with application/merge-patch+json content type and no body provided 2ms
     → Unhandled response
 ❯ test/e2e/http/encode/duration/main.test.ts (18 tests | 11 failed) 76ms
   ✓ Encode.Duration > QueryClient > should test default encode for a duration parameter
   ✓ Encode.Duration > QueryClient > should test iso8601 encode for a duration parameter
   × Encode.Duration > QueryClient > should test int32 seconds encode for a duration parameter 7ms
     → Unhandled response
   × Encode.Duration > QueryClient > should test float seconds encode for a duration parameter 2ms
     → Unhandled response
   × Encode.Duration > QueryClient > should test float64 seconds encode for a duration parameter 6ms
     → Unhandled response
   × Encode.Duration > QueryClient > should test int32 seconds encode for a duration array parameter 2ms
     → Unhandled response
   ✓ Encode.Duration > PropertyClient > should test default encode for a duration property
   ✓ Encode.Duration > PropertyClient > should test iso8601 encode for a duration property
   × Encode.Duration > PropertyClient > should test int32 seconds encode for a duration property 5ms
     → Unhandled response
   × Encode.Duration > PropertyClient > should test float seconds encode for a duration property 3ms
     → Unhandled response
   × Encode.Duration > PropertyClient > should test float64 seconds encode for a duration property 2ms
     → Unhandled response
   × Encode.Duration > PropertyClient > should test float seconds encode for a duration array property 3ms
     → Unhandled response
   ✓ Encode.Duration > HeaderClient > should test default encode for a duration header
   ✓ Encode.Duration > HeaderClient > should test iso8601 encode for a duration header
   ✓ Encode.Duration > HeaderClient > should test iso8601 encode for a duration array header
   × Encode.Duration > HeaderClient > should test int32 seconds encode for a duration header 2ms
     → Unhandled response
   × Encode.Duration > HeaderClient > should test float seconds encode for a duration header 2ms
     → Unhandled response
   × Encode.Duration > HeaderClient > should test float64 seconds encode for a duration header 2ms
     → Unhandled response
 ❯ test/e2e/http/routes/main.test.ts (46 tests | 6 failed) 111ms
   ✓ Routes > fixed > should call fixed operation at the root level
   ✓ Routes > InInterface > should call fixed operation inside interface
   ✓ Routes > PathParameters > should handle implicit path parameter
   ✓ Routes > PathParameters > should handle explicit @path parameter
   ✓ Routes > PathParameters > should handle @path parameter without explicit route definition
   ✓ Routes > PathParameters > ReservedExpansion > should handle reserved expansion with template
   ✓ Routes > PathParameters > ReservedExpansion > should handle reserved expansion with annotation
   ✓ Routes > PathParameters > SimpleExpansion > Standard > should handle primitive value with explode: false
   ✓ Routes > PathParameters > SimpleExpansion > Standard > should handle array value with explode: false
   ✓ Routes > PathParameters > SimpleExpansion > Standard > should handle record value with explode: false
   × Routes > PathParameters > SimpleExpansion > Explode > should handle primitive value with explode: true 10ms
     → Unhandled response
   ✓ Routes > PathParameters > SimpleExpansion > Explode > should handle array value with explode: true
   ✓ Routes > PathParameters > SimpleExpansion > Explode > should handle record value with explode: true
   ✓ Routes > PathParameters > PathExpansion > Standard > should handle primitive value with explode: false
   ✓ Routes > PathParameters > PathExpansion > Standard > should handle array value with explode: false
   ✓ Routes > PathParameters > PathExpansion > Standard > should handle record value with explode: false
   × Routes > PathParameters > PathExpansion > Explode > should handle primitive value with explode: true 2ms
     → Unhandled response
   ✓ Routes > PathParameters > PathExpansion > Explode > should handle array value with explode: true
   ✓ Routes > PathParameters > PathExpansion > Explode > should handle record value with explode: true
   ✓ Routes > PathParameters > LabelExpansion > Standard > should handle primitive value with explode: false
   ✓ Routes > PathParameters > LabelExpansion > Standard > should handle array value with explode: false
   ✓ Routes > PathParameters > LabelExpansion > Standard > should handle record value with explode: false
   × Routes > PathParameters > LabelExpansion > Explode > should handle primitive value with explode: true 1ms
     → Unhandled response
   ✓ Routes > PathParameters > LabelExpansion > Explode > should handle array value with explode: true
   ✓ Routes > PathParameters > LabelExpansion > Explode > should handle record value with explode: true
   ✓ Routes > PathParameters > MatrixExpansion > Standard > should handle primitive value with explode: false
   ✓ Routes > PathParameters > MatrixExpansion > Standard > should handle array value with explode: false
   ✓ Routes > PathParameters > MatrixExpansion > Standard > should handle record value with explode: false
   × Routes > PathParameters > MatrixExpansion > Explode > should handle primitive value with explode: true 2ms
     → Unhandled response
   ✓ Routes > PathParameters > MatrixExpansion > Explode > should handle array value with explode: true
   ✓ Routes > PathParameters > MatrixExpansion > Explode > should handle record value with explode: true
   ✓ Routes > QueryParameters > should handle implicit query parameter
   ✓ Routes > QueryParameters > should handle explicit @query parameter
   ✓ Routes > QueryParameters > should handle @query parameter without explicit route definition
   ✓ Routes > QueryParameters > QueryExpansion > Standard > should handle primitive value with explode: false
   ✓ Routes > QueryParameters > QueryExpansion > Standard > should handle array value with explode: false
   ✓ Routes > QueryParameters > QueryExpansion > Standard > should handle record value with explode: false
   × Routes > QueryParameters > QueryExpansion > Explode > should handle primitive value with explode: true 2ms
     → Unhandled response
   ✓ Routes > QueryParameters > QueryExpansion > Explode > should handle array value with explode: true
   ✓ Routes > QueryParameters > QueryExpansion > Explode > should handle record value with explode: true
   ✓ Routes > QueryParameters > QueryContinuation > Standard > should handle primitive value with explode: false
   ✓ Routes > QueryParameters > QueryContinuation > Standard > should handle array value with explode: false
   ✓ Routes > QueryParameters > QueryContinuation > Standard > should handle record value with explode: false
   × Routes > QueryParameters > QueryContinuation > Explode > should handle primitive value with explode: true 3ms
     → Unhandled response
   ✓ Routes > QueryParameters > QueryContinuation > Explode > should handle array value with explode: true
   ✓ Routes > QueryParameters > QueryContinuation > Explode > should handle record value with explode: true
 ✓ test/e2e/http/type/union/main.test.ts (20 tests) 64ms
 ↓ test/e2e/http/type/scalar/scalar.test.ts (11 tests | 11 skipped)
 ❯ test/e2e/http/type/scalar/main.test.ts (16 tests | 2 failed) 58ms
   ✓ Type.Scalar > StringClient > should handle a string value returned from the server
   × Type.Scalar > StringClient > should send a string value to the server 8ms
     → Unhandled response
   ✓ Type.Scalar > BooleanClient > should handle a boolean value returned from the server
   ✓ Type.Scalar > BooleanClient > should send a boolean value to the server
   ✓ Type.Scalar > UnknownClient > should handle an unknown value returned from the server
   × Type.Scalar > UnknownClient > should send an unknown value to the server 3ms
     → Unhandled response
   ✓ Type.Scalar > DecimalTypeClient > should handle a decimal value in the response body
   ✓ Type.Scalar > DecimalTypeClient > should send a decimal value in the request body
   ✓ Type.Scalar > DecimalTypeClient > should handle a decimal request parameter
   ✓ Type.Scalar > Decimal128TypeClient > should handle a decimal128 value in the response body
   ✓ Type.Scalar > Decimal128TypeClient > should send a decimal128 value in the request body
   ✓ Type.Scalar > Decimal128TypeClient > should handle a decimal128 request parameter
   ✓ Type.Scalar > DecimalVerifyClient > should prepare verify values for decimal
   ✓ Type.Scalar > DecimalVerifyClient > should send a decimal value to verify
   ✓ Type.Scalar > Decimal128VerifyClient > should prepare verify values for decimal128
   ✓ Type.Scalar > Decimal128VerifyClient > should send a decimal128 value to verify
 ✓ test/e2e/http/type/model/inheritance/single-discriminator/main.test.ts (7 tests) 50ms
 ✓ test/e2e/http/type/model/inheritance/enum-discriminator/main.test.ts (8 tests) 37ms
 ❯ test/e2e/http/type/model/visibility/main.test.ts (7 tests | 1 failed) 56ms
   ✓ Type.Model.Visibility > should generate and receive an output model with readonly properties (getModel)
   × Type.Model.Visibility > should send a model with write/create properties (headModel) 11ms
     → expected undefined to be defined
   ✓ Type.Model.Visibility > should send a model with write/create/update properties (putModel)
   ✓ Type.Model.Visibility > should send a model with write/update properties (patchModel)
   ✓ Type.Model.Visibility > should send a model with write/create properties (postModel)
   ✓ Type.Model.Visibility > should send a model with write/delete properties (deleteModel)
   ✓ Type.Model.Visibility > should send and receive a model with readonly properties (putReadOnlyModel)
 ❯ test/e2e/http/versioning/removed/main.test.ts (4 tests | 4 failed) 50ms
   × Versioning.Removed > v2 operation > should send and receive ModelV2 with the correct signature 37ms
     → Unhandled response
   × Versioning.Removed > modelV3 operation > should handle ModelV3 for v1 4ms
     → Unhandled response
   × Versioning.Removed > modelV3 operation > should handle ModelV3 for v2preview 4ms
     → Unhandled response
   × Versioning.Removed > modelV3 operation > should handle ModelV3 for v2 4ms
     → Unhandled response
 ❯ test/e2e/http/parameters/spread/main.test.ts (10 tests | 6 failed) 66ms
   ✓ Parameters.Spread > ModelClient > should handle spread named model in request body
   ✓ Parameters.Spread > ModelClient > should handle spread model with only @body property
   × Parameters.Spread > ModelClient > should handle spread model without @body property 11ms
     → Unhandled response
   × Parameters.Spread > ModelClient > should handle spread model with all HTTP request decorators 2ms
     → Unhandled response
   × Parameters.Spread > ModelClient > should handle spread model with non-body HTTP request decorators 2ms
     → Unhandled response
   ✓ Parameters.Spread > AliasClient > should handle spread alias in request body
   × Parameters.Spread > AliasClient > should handle spread alias with inner model in parameters 3ms
     → Unhandled response
   ✓ Parameters.Spread > AliasClient > should handle spread alias with path and header parameters
   × Parameters.Spread > AliasClient > should handle spread alias including multiple parameters, optional and required 4ms
     → Unhandled response
   × Parameters.Spread > AliasClient > should handle spread alias containing another alias property as body 10ms
     → Unhandled response
 ❯ test/e2e/http/type/property/value-types/main.test.ts (24 tests | 2 failed) 112ms
   ✓ Type.Property.ValueTypes > BooleanClient > should handle a model with a boolean property
   ✓ Type.Property.ValueTypes > BooleanClient > should send a model with a boolean property
   ✓ Type.Property.ValueTypes > StringClient > should handle a model with a string property
   ✓ Type.Property.ValueTypes > StringClient > should send a model with a string property
   × Type.Property.ValueTypes > BytesClient > should handle a model with a bytes property 14ms
     → expected { property: 'aGVsbG8sIHdvcmxkIQ==' } to strictly equal { property: Uint8Array[ 72, …(-87) ] }
   × Type.Property.ValueTypes > BytesClient > should send a model with a bytes property 9ms
     → Unhandled response
   ✓ Type.Property.ValueTypes > IntClient > should handle a model with an int property
   ✓ Type.Property.ValueTypes > IntClient > should send a model with an int property
   ✓ Type.Property.ValueTypes > FloatClient > should handle a model with a float property
   ✓ Type.Property.ValueTypes > FloatClient > should send a model with a float property
   ✓ Type.Property.ValueTypes > DecimalClient > should handle a model with a decimal property
   ✓ Type.Property.ValueTypes > DecimalClient > should send a model with a decimal property
   ✓ Type.Property.ValueTypes > Decimal128Client > should handle a model with a decimal128 property
   ✓ Type.Property.ValueTypes > Decimal128Client > should send a model with a decimal128 property
   ✓ Type.Property.ValueTypes > DatetimeClient > should handle a model with a datetime property
   ✓ Type.Property.ValueTypes > DatetimeClient > should send a model with a datetime property
   ✓ Type.Property.ValueTypes > DurationClient > should handle a model with a duration property
   ✓ Type.Property.ValueTypes > DurationClient > should send a model with a duration property
   ✓ Type.Property.ValueTypes > EnumClient > should handle a model with an enum property
   ✓ Type.Property.ValueTypes > EnumClient > should send a model with an enum property
   ✓ Type.Property.ValueTypes > ExtensibleEnumClient > should handle a model with an extensible enum property
   ✓ Type.Property.ValueTypes > ExtensibleEnumClient > should send a model with an extensible enum property
   ✓ Type.Property.ValueTypes > CollectionsStringClient > should handle a model with a string collection property
   ✓ Type.Property.ValueTypes > CollectionsStringClient > should send a model with a string collection property
 ❯ test/e2e/http/versioning/renamedFrom/main.test.ts (2 tests | 2 failed) 29ms
   × Versioning.RenamedFrom > RenamedFromClient > should handle 'newOp' with renamed properties and return the expected response 25ms
     → Unhandled response
   × Versioning.RenamedFrom > NewInterfaceClient > should handle 'newOpInNewInterface' with renamed properties and return the expected response 3ms
     → Unhandled response
 ❯ test/e2e/http/type/property/additional-properties/main.test.ts (12 tests | 12 failed) 92ms
   × Type.Property.AdditionalProperties > ExtendsUnknownClient > Expected response body: {'name': 'ExtendsUnknownAdditionalProperties', 'prop1': 32, 'prop2': true, 'prop3': 'abc'} 37ms
     → expected { Object (name) } to deeply equal { …(4) }
   × Type.Property.AdditionalProperties > ExtendsUnknownClient > Expected input body: {'name': 'ExtendsUnknownAdditionalProperties', 'prop1': 32, 'prop2': true, 'prop3': 'abc'} 10ms
     → Unhandled response
   × Type.Property.AdditionalProperties > ExtendsUnknownDerivedClient > Expected response body: {'name': 'ExtendsUnknownAdditionalProperties', 'index': 314, 'age': 2.71875, 'prop1': 32, 'prop2': true, 'prop3': 'abc'} 6ms
     → expected { index: 314, age: 2.71875, …(1) } to deeply equal { …(6) }
   × Type.Property.AdditionalProperties > ExtendsUnknownDerivedClient > Expected input body: {'name': 'ExtendsUnknownAdditionalProperties', 'index': 314, 'age': 2.71875, 'prop1': 32, 'prop2': true, 'prop3': 'abc'} 4ms
     → Unhandled response
   × Type.Property.AdditionalProperties > ExtendsUnknownDiscriminatedClient > Expected response body: {'kind': 'derived', 'name': 'Derived', 'index': 314, 'age': 2.71875, 'prop1': 32, 'prop2': true, 'prop3': 'abc'} 5ms
     → expected { kind: 'derived', index: 314, …(2) } to deeply equal { kind: 'derived', …(6) }
   × Type.Property.AdditionalProperties > ExtendsUnknownDiscriminatedClient > Expected input body: {'kind': 'derived', 'name': 'Derived', 'index': 314, 'age': 2.71875, 'prop1': 32, 'prop2': true, 'prop3': 'abc'} 3ms
     → Unhandled response
   × Type.Property.AdditionalProperties > IsUnknownClient > Expected response body: {'name': 'IsUnknownAdditionalProperties', 'prop1': 32, 'prop2': true, 'prop3': 'abc'} 6ms
     → expected { Object (additionalProperties, name) } to deeply equal { …(4) }
   × Type.Property.AdditionalProperties > IsUnknownClient > Expected input body: {'name': 'IsUnknownAdditionalProperties', 'prop1': 32, 'prop2': true, 'prop3': 'abc'} 4ms
     → jsonRecordUnknownToTransportTransform_2(...) is not a function
   × Type.Property.AdditionalProperties > IsUnknownDerivedClient > Expected response body: {'name': 'IsUnknownAdditionalProperties', 'index': 314, 'age': 2.71875, 'prop1': 32, 'prop2': true, 'prop3': 'abc'} 3ms
     → expected { index: 314, age: 2.71875, …(1) } to deeply equal { …(6) }
   × Type.Property.AdditionalProperties > IsUnknownDerivedClient > Expected input body: {'name': 'IsUnknownAdditionalProperties', 'index': 314, 'age': 2.71875, 'prop1': 32, 'prop2': true, 'prop3': 'abc'} 6ms
     → Unhandled response
   × Type.Property.AdditionalProperties > IsUnknownDiscriminatedClient > Expected response body: {'kind': 'derived', 'name': 'Derived', 'index': 314, 'age': 2.71875, 'prop1': 32, 'prop2': true, 'prop3': 'abc'} 4ms
     → expected { kind: 'derived', index: 314, …(3) } to deeply equal { kind: 'derived', …(6) }
   × Type.Property.AdditionalProperties > IsUnknownDiscriminatedClient > Expected input body: {'kind': 'derived', 'name': 'Derived', 'index': 314, 'age': 2.71875, 'prop1': 32, 'prop2': true, 'prop3': 'abc'} 1ms
     → jsonRecordUnknownToTransportTransform_3(...) is not a function
 ❯ test/e2e/http/parameters/collection-format/main.test.ts (6 tests | 3 failed) 45ms
   ✓ Parameters.CollectionFormat > QueryClient > should test sending a multi collection format array query parameters
   × Parameters.CollectionFormat > QueryClient > should test sending an ssv collection format array query parameters 10ms
     → Unhandled response
   × Parameters.CollectionFormat > QueryClient > should test sending a tsv collection format array query parameters 5ms
     → Unhandled response
   × Parameters.CollectionFormat > QueryClient > should test sending a pipes collection format array query parameters 3ms
     → Unhandled response
   ✓ Parameters.CollectionFormat > QueryClient > should test sending a csv collection format array query parameters
   ✓ Parameters.CollectionFormat > HeaderClient > should test sending a csv collection format array header parameters
 ❯ test/e2e/http/versioning/added/main.test.ts (3 tests | 3 failed) 36ms
   × Versioning.Added > should send and receive v1 operation with ModelV1 at latest version 28ms
     → Unhandled response
   × Versioning.Added > should send and receive v2 operation with ModelV2 at latest version 3ms
     → Unhandled response
   × Versioning.Added > InterfaceV2Client > should send and receive v2InInterface operation with ModelV2 3ms
     → Unhandled response
 ❯ test/e2e/http/payload/content-negotiation/main.test.ts (4 tests | 4 failed) 39ms
   × Payload.ContentNegotiation > SameBodyClient > should return a PNG image when 'Accept: image/png' is sent 26ms
     → expected '\ufffdPNG\r\n\u001a\n\u0000\u0000\u00…' to be an instance of Uint8Array
   × Payload.ContentNegotiation > SameBodyClient > should return a JPEG image when 'Accept: image/jpeg' is sent 4ms
     → expected '\ufffd\ufffd\ufffd\ufffd\u0000\u0010J…' to be an instance of Uint8Array
   × Payload.ContentNegotiation > DifferentBodyClient > should return a PNG image when 'Accept: image/png' is sent 3ms
     → expected '\ufffdPNG\r\n\u001a\n\u0000\u0000\u00…' to be an instance of Uint8Array
   × Payload.ContentNegotiation > DifferentBodyClient > should return a JSON object containing a PNG image when 'Accept: application/json' is sent 5ms
     → expected 'iVBORw0KGgoAAAANSUhEUgAAAFgAAAAuCAYAA…' to be an instance of Uint8Array
 ✓ test/e2e/http/parameters/body-optionality/main.test.ts (4 tests) 36ms
 ✓ test/e2e/http/type/model/inheritance/not-discriminated/main.test.ts (3 tests) 31ms
 ✓ test/e2e/http/type/model/inheritance/recursive/main.test.ts (2 tests) 34ms
 ❯ test/e2e/http/special-headers/conditional-request/main.test.ts (4 tests | 4 failed) 47ms
   × SpecialHeaders.ConditionalRequest > should send a request with If-Match header defined 34ms
     → Unhandled response
   × SpecialHeaders.ConditionalRequest > should send a request with If-None-Match header defined 4ms
     → Unhandled response
   × SpecialHeaders.ConditionalRequest > should send a request with If-Modified-Since header defined 3ms
     → Unhandled response
   × SpecialHeaders.ConditionalRequest > should send a request with If-Unmodified-Since header defined 5ms
     → Unhandled response
 ❯ test/e2e/http/authentication/api-key/main.test.ts (2 tests | 1 failed) 39ms
   ✓ Authentication.ApiKey > should authenticate with a valid API key
   × Authentication.ApiKey > should return error for an invalid API key 9ms
     → expected undefined to be 403 // Object.is equality
 ❯ test/e2e/http/versioning/typeChangedFrom/main.test.ts (2 tests | 2 failed) 46ms
   × Versioning.TypeChangedFrom > v1 > should send and receive data using v1 API signature 32ms
     → Unhandled response
   × Versioning.TypeChangedFrom > v2 > should send and receive data using v2 API signature 12ms
     → Unhandled response
 ❯ test/e2e/http/versioning/madeOptional/main.test.ts (2 tests | 2 failed) 52ms
   × Versioning.MadeOptional > v1 > should send the request body and handle the response for v1 31ms
     → Unhandled response
   × Versioning.MadeOptional > v2 > should send the request body, additional query param, and handle the response for v2 19ms
     → Unhandled response
 ❯ test/e2e/http/server/versions/versioned/main.test.ts (4 tests | 2 failed) 88ms
   ✓ Server.Versions.Versioned > should perform operation without api-version in the URL
   × Server.Versions.Versioned > should perform operation with query api-version, defaulting to '2022-12-01-preview' 12ms
     → Expected "(", "*", ",", ":", "}", or [a-z,A-Z,0-9,_,.,%] but "-" found.
   ✓ Server.Versions.Versioned > should perform operation with path api-version, defaulting to '2022-12-01-preview'
   × Server.Versions.Versioned > should perform operation with query api-version set to '2021-01-01-preview' 1ms
     → Expected "(", "*", ",", ":", "}", or [a-z,A-Z,0-9,_,.,%] but "-" found.
 ❯ test/e2e/http/encode/numeric/main.test.ts (3 tests | 3 failed) 31ms
   × Encode.Numeric > PropertyClient > should send and receive safeint as string 23ms
     → Unhandled response
   × Encode.Numeric > PropertyClient > should send and receive optional uint32 as string 4ms
     → Unhandled response
   × Encode.Numeric > PropertyClient > should send and receive uint8 as string 3ms
     → Unhandled response
 ❯ test/e2e/http/type/enum/extensible/main.test.ts (4 tests | 2 failed) 50ms
   ✓ Type.Enum.Extensible > StringClient > should handle a known value returned from the server
   ✓ Type.Enum.Extensible > StringClient > should handle an unknown value returned from the server
   × Type.Enum.Extensible > StringClient > should send a known value to the server 9ms
     → Unhandled response
   × Type.Enum.Extensible > StringClient > should send an unknown value to the server 12ms
     → Unhandled response
 ❯ test/e2e/http/authentication/oauth2/main.test.ts (2 tests | 2 failed) 24ms
   × Authentication.OAuth2 > should validate the client is authenticated 16ms
     → Bearer token authentication is not permitted for non-TLS protected (non-https) URLs.
   × Authentication.OAuth2 > should handle invalid authentication and return error 6ms
     → expected undefined to be 403 // Object.is equality
 ❯ test/e2e/http/payload/pageable/main.test.ts (0 test) 4ms
 ❯ test/e2e/http/payload/media-type/main.test.ts (4 tests | 3 failed) 36ms
   × Payload.MediaType > StringBodyClient > should send a string body as text/plain 24ms
     → Unhandled response
   × Payload.MediaType > StringBodyClient > should get a string body as text/plain 4ms
     → Unhandled response
   × Payload.MediaType > StringBodyClient > should send a string body as application/json 3ms
     → Unhandled response
   ✓ Payload.MediaType > StringBodyClient > should get a string body as application/json
 ❯ test/e2e/http/authentication/union/main.test.ts (2 tests | 1 failed) 32ms
   ✓ Authentication.Union > should authenticate using the valid API key
   × Authentication.Union > should authenticate using the valid OAuth token 7ms
     → Bearer token authentication is not permitted for non-TLS protected (non-https) URLs.
 ✓ test/e2e/http/parameters/basic/main.test.ts (2 tests) 25ms
 ❯ test/e2e/http/server/versions/not-versioned/main.test.ts (3 tests | 1 failed) 48ms
   ✓ Server.Versions.NotVersioned > should execute operation 'withoutApiVersion' without an api-version
   × Server.Versions.NotVersioned > should execute operation 'withQueryApiVersion' with query api-version 7ms
     → Expected "(", "*", ",", ":", "}", or [a-z,A-Z,0-9,_,.,%] but "-" found.
   ✓ Server.Versions.NotVersioned > should execute operation 'withPathApiVersion' with path api-version
 ❯ test/e2e/http/type/enum/fixed/main.test.ts (3 tests | 1 failed | 2 skipped) 54ms
   ↓ Type.Enum.Fixed > StringClient > should handle a known value returned from the server
   ↓ Type.Enum.Fixed > StringClient > should send a known value to the server
   × Type.Enum.Fixed > StringClient > should send an unknown value to the server 53ms
     → Unhandled response
 ✓ test/e2e/http/serialization/encoded-name/json/main.test.ts (2 tests) 26ms
 ❯ test/e2e/http/server/path/multiple/main.test.ts (2 tests | 2 failed) 44ms
   × Server.Path.Multiple > should call operation with client path parameters 29ms
     → Unhandled response
   × Server.Path.Multiple > should call operation with client and method path parameters 14ms
     → Unhandled response
 ✓ test/e2e/http/type/model/empty/main.test.ts (3 tests) 29ms
 ❯ test/e2e/http/special-headers/repeatability/main.test.ts (1 test | 1 failed) 25ms
   × SpecialHeaders.Repeatability > should recognize Repeatability-Request-ID and Repeatability-First-Sent headers 24ms
     → Unhandled response
 ❯ test/e2e/http/versioning/returnTypeChangedFrom/main.test.ts (1 test | 1 failed) 22ms
   × Versioning.ReturnTypeChangedFrom > TestClient > should send the request body and return the expected response body for version 'v2' 21ms
     → Unhandled response
 ✓ test/e2e/http/server/path/single/main.test.ts (1 test) 16ms
 ✓ test/e2e/http/server/endpoint/not-defined/main.test.ts (1 test) 17ms
 ❯ test/e2e/http/payload/multipart/main.test.ts (12 tests | 12 failed) 7253ms
   × Payload.MultiPart > FormDataClient > should send mixed parts with multipart/form-data 590ms
     → Unhandled response
   × Payload.MultiPart > FormDataClient > should send complex parts with multipart/form-data 574ms
     → Unhandled response
   × Payload.MultiPart > FormDataClient > should send json part with binary part 987ms
     → Unhandled response
   × Payload.MultiPart > FormDataClient > should send binary array parts with multipart/form-data 750ms
     → Unhandled response
   × Payload.MultiPart > FormDataClient > should send multi-binary parts multiple times 730ms
     → Unhandled response
   × Payload.MultiPart > FormDataClient > should send parts and check filename/content-type 980ms
     → Unhandled response
   × Payload.MultiPart > FormDataClient > should send anonymous model with multipart/form-data 576ms
     → Unhandled response
   × Payload.MultiPart > FormDataClient.HttpParts.ContentType > should handle image/jpeg with specific content type 817ms
     → Unhandled response
   × Payload.MultiPart > FormDataClient.HttpParts.ContentType > should handle required content type with multipart/form-data 590ms
     → Unhandled response
   × Payload.MultiPart > FormDataClient.HttpParts.ContentType > should handle optional content type file parts 648ms
     → Unhandled response
   × Payload.MultiPart > FormDataClient.HttpParts > should send json array and file array 6ms
     → Unhandled response
   × Payload.MultiPart > FormDataClient.HttpParts.NonString > should handle non-string float 3ms
     → Unhandled response

 Test Files  35 failed | 14 passed | 2 skipped (51)
      Tests  179 failed | 317 passed | 39 skipped (535)
   Start at  02:47:50
   Duration  11.42s (transform 35.60s, setup 0ms, collect 56.77s, tests 10.49s, environment 10ms, prepare 4.60s)


🛑 Stopping server...
Reading coverage file from: /home/joheredi/dev/typespec/packages/http-client-js/tsp-spector-coverage-javascript-standard.json
Total Tests: 660
Passed Tests: 303
Coverage Percentage: 45.91%
 ELIFECYCLE  Command failed with exit code 1.
